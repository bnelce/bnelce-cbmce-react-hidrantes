{"ast":null,"code":"import _slicedToArray from \"/home/cbmce/\\xC1rea de Trabalho/aqui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cbmce/\\xC1rea de Trabalho/aqui/src/views/Dashboard/components/LatestSales/Maap.js\";\nimport React, { useState } from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport * as parksData from '../../../../data/skateboard-parks.json';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Title } from './styles';\n\nfunction Map() {\n  //toda vez que cria uma variável que vai precisar variar dentro da classe!!!\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedPark = _useState2[0],\n        setselectedPark = _useState2[1];\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3)\n    },\n    large: {\n      width: theme.spacing(10),\n      height: theme.spacing(10)\n    }\n  }));\n  const classes = useStyles();\n  return (// Important! Always set the container height explicitly\n    React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: -3.907756,\n        lng: -38.256283\n      },\n      defaultZoom: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, parksData.features.map(park => React.createElement(Marker, {\n      icon: {\n        url: '/hidrante.png',\n        scaledSize: new window.google.maps.Size(20, 20)\n      },\n      key: park.properties.id,\n      onClick: () => {\n        setselectedPark(park);\n      },\n      position: {\n        lat: park.properties.longitude,\n        lng: park.properties.latitude\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), selectedPark && React.createElement(InfoWindow, {\n      onCloseClick: () => {\n        setselectedPark(null);\n      },\n      position: {\n        lat: selectedPark.properties.longitude,\n        lng: selectedPark.properties.latitude\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      className: classes.large,\n      src: selectedPark.imagem.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Title, {\n      cor: selectedPark.properties.cor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"N\\xFAmero de s\\xE9rie: \", selectedPark.properties.numero), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Press\\xE3o: \", selectedPark.vistorias.pressao), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Vazao: \", selectedPark.vistorias.vazao))))\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default function Maap() {\n  return React.createElement(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }),\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&\\n    libraries=geometry,drawing,places&key= AIzaSyDragFl8lssbgGchWJfn8FrAgkDlWoh_TM\",\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/cbmce/Área de Trabalho/aqui/src/views/Dashboard/components/LatestSales/Maap.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","parksData","Avatar","makeStyles","Title","Map","selectedPark","setselectedPark","useStyles","theme","root","display","margin","spacing","small","width","height","large","classes","lat","lng","features","map","park","url","scaledSize","window","google","maps","Size","properties","id","longitude","latitude","imagem","cor","numero","vistorias","pressao","vazao","WrappedMap","Maap"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\nimport { GoogleMap, withScriptjs,\n  withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport * as parksData from '../../../../data/skateboard-parks.json';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Title} from './styles';\n\nfunction Map() {\n  //toda vez que cria uma variável que vai precisar variar dentro da classe!!!\n  const [selectedPark, setselectedPark] = useState(null);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    // Important! Always set the container height explicitly\n    <GoogleMap\n      defaultCenter={{lat: -3.907756, lng: -38.256283}}\n      defaultZoom={10}\n    >\n      {parksData.features.map((park) => (\n        <Marker\n          icon = {{\n            url: '/hidrante.png',\n            scaledSize: new window.google.maps.Size(20,20)\n          }} \n          key= {park.properties.id}\n          onClick = {() => {\n            setselectedPark(park)\n          }}\n          position = {{ lat: park.properties.longitude,\n            lng: park.properties.latitude}}\n        />\n      ))}\n      \n      { selectedPark && (\n        <InfoWindow\n          onCloseClick={()=>{\n            setselectedPark(null);\n          }}\n          position={{\n            lat: selectedPark.properties.longitude,\n            lng: selectedPark.properties.latitude\n          }}\n        >\n          <div>\n            <Avatar\n              alt=\"Remy Sharp\"\n              className={classes.large}\n              src={selectedPark.imagem.url}\n            />\n            <Title cor = {selectedPark.properties.cor} >Número de série: {selectedPark.properties.numero}</Title>\n            <p>Pressão: {selectedPark.vistorias.pressao}</p>\n            <p>Vazao: {selectedPark.vistorias.vazao}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default function Maap() {\n  return (\n    <div style= {{width: '100vw', height: '100vh'}}>\n      <WrappedMap\n        containerElement= {<div style={{ height: '100%' }} />}\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&\n    libraries=geometry,drawing,places&key= AIzaSyDragFl8lssbgGchWJfn8FrAgkDlWoh_TM`}\n        loadingElement={<div style={{ height: '100%' }} />}\n        mapElement= {<div style={{ height: '100%' }} />}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}